<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-4.2.xsd
						http://www.springframework.org/schema/mvc
 						http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
						http://www.springframework.org/schema/security
						http://www.springframework.org/schema/security/spring-security-5.6.xsd
                        http://www.springframework.org/schema/jdbc
                        http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd">
    <security:http auto-config="true" use-expressions="true">
        <security:intercept-url pattern="/auth/**" access="permitAll()"/>
        <security:intercept-url pattern="/dang-nhap" access="permitAll()"/>
        <security:intercept-url pattern="/nguoi-dung**" access="hasRole('ROLE_USER')"/>
        <security:form-login login-page="/dang-nhap"
                             username-parameter="username"
                             login-processing-url="/j_check"
                             password-parameter="password"
                             default-target-url="/nguoi-dung"
                             authentication-failure-url="/dang-nhap?error=1"/>
        <security:logout logout-url="/logout" logout-success-url="/"/>
<!--        <security:custom-filter ref="socialAuthenticationFilter" before="PRE_AUTH_FILTER"/>-->
    </security:http>

    <security:authentication-manager >
<!--        <security:authentication-provider ref="userAuthProvider"/>-->
<!--&lt;!&ndash;        <security:authentication-provider ref="socialAuthenticationProvider"/>&ndash;&gt;-->

        <security:authentication-provider>
            <security:user-service>
                <security:user name="test" authorities="ROLE_USER" password="{noop}123"/>
            </security:user-service>
        </security:authentication-provider>

<!--        <security:authentication-provider user-service-ref="jazzUserDetailsService">-->
<!--        </security:authentication-provider>-->
    </security:authentication-manager>
<!--    <security:global-method-security pre-post-annotations="enabled"/>-->

    <mvc:annotation-driven/>
    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="order" value="1"/>
        <property name="prefix" value="/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="order" value="3"/>
        <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
    </bean>

    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/tiles/definitions.xml</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.apache.derby.jdbc.EmbeddedDriver"/>
        <property name="url" value="jdbc:derby:/java/db/userdb1;create=true"/>
        <property name="username" value=""/>
        <property name="password" value=""/>
    </bean>

    <bean id="startEventHandler" class="edu.hanoi.jazz.ContextStartEventHandler"/>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.DerbyDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
        <property name="packagesToScan" value="edu.hanoi.jazz.dao.model"/>
        <property name="mappingLocations">
            <list>
                <value>classpath:User.xml</value>
            </list>
        </property>
    </bean>
<!--    <bean id="socialAuthenticationFilter" class="org.springframework.social.security.SocialAuthenticationFilter">-->
<!--        <constructor-arg name="authManager" ref="authenticationManager"/>-->
<!--        <constructor-arg name="userIdSource" ref="userIdSource"/>-->
<!--        <constructor-arg name="usersConnectionRepository" ref="inMemoryUsersConnectionRepository"/>-->
<!--        <constructor-arg name="authServiceLocator" ref="connectionFactoryLocator"/>-->
<!--    </bean>-->

<!--    <bean id="socialAuthenticationProvider" class="org.springframework.social.security.SocialAuthenticationProvider">-->
<!--        <constructor-arg ref="inMemoryUsersConnectionRepository"/>-->
<!--        <constructor-arg ref="socialUserDetailService"/>-->
<!--    </bean>-->

<!--    <bean id="inMemoryUsersConnectionRepository" class="org.springframework.social.connect.mem.InMemoryUsersConnectionRepository">-->
<!--        <constructor-arg name="connectionFactoryLocator" ref="connectionFactoryLocator"/>-->
<!--        <property name="connectionSignUp" ref="connectionSignUp"/>-->
<!--    </bean>-->

<!--    <bean id="connectionFactoryLocator" class="edu.hanoi.jazz.service.JazzSocialAuthServiceRegistry">-->
<!--        <constructor-arg>-->
<!--            <list>-->
<!--                <ref bean="facebookAuthenticationService"/>-->
<!--            </list>-->
<!--        </constructor-arg>-->
<!--    </bean>-->

<!--    <bean id="facebookAuthenticationService" class="org.springframework.social.facebook.security.FacebookAuthenticationService">-->
<!--        <constructor-arg name="apiKey" value="${appId}"/>-->
<!--        <constructor-arg name="appSecret" value="${secretKey}"/>-->
<!--    </bean>-->

<!--    <bean id="connectionSignUp" class="edu.hanoi.jazz.service.JazzConnectionSignUp"/>-->
</beans>